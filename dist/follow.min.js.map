{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"follow.min.js","sourcesContent":["class Follow {\n    /**\n     * The options for the follow script\n     * @type {FollowDefaults}\n     */\n    public defaults: FollowDefaults = new FollowDefaults()\n\n    /**\n     * Array where all the elements are stored in\n     * @type Array<FollowElement>\n     */\n    public elements: Array<FollowElement> = new Array<FollowElement>()\n\n    /**\n     * Position of the Mouse to use to calculate\n     * @type {FollowPosition}\n     */\n    public mouse: FollowPosition = new FollowPosition(0, 0)\n\n    /**\n     * Current scroll position to use to calculate\n     * @type {FollowPosition}\n     */\n    public scroll: FollowPosition = new FollowPosition(0, 0)\n\n    /**\n     * Constructor\n     * @param {object} options\n     */\n    constructor (options: object = undefined) {\n        this.setDefaults(options)\n        this.defaults.initiate && this.initiate()\n    }\n\n    /**\n     * Initiate the script\n     * Get all elements with the given attribute and activate the animation\n     */\n    public initiate () {\n        let targets: NodeListOf<HTMLElement> = document.querySelectorAll(`[${this.defaults['attribute']}]`)\n        targets.forEach(target => this.elements.push(new FollowElement(target, this.defaults)))\n\n        let context = this\n\n        document.addEventListener('mousemove', (event) => {\n            Follow.updateMousePosition(new FollowPosition(event.clientX, event.clientY), context)\n            Follow.animate(context)\n        })\n\n        document.addEventListener('scroll', () => {\n            Follow.updateScrollPosition(new FollowPosition(window.scrollX, window.scrollY), context)\n            Follow.animate(context)\n        })\n    }\n\n    /**\n     * Destroy the script\n     * Remove all elements and set them to their normal position\n     */\n    public destroy () {\n        this.elements = new Array<FollowElement>()\n    }\n\n    /**\n     * Destroy the script and initiate it again with the same options\n     */\n    public refresh () {\n        this.destroy()\n        this.initiate()\n    }\n\n    /**\n     * Animate the element\n     * @param context\n     */\n    private static animate (context: any) {\n        for (let element of context.elements) {\n            let additional: FollowPosition = new FollowPosition(\n                parseFloat(((context.mouse.x + context.scroll.x - element.position.x) / element.factor).toString()),\n                parseFloat(((context.mouse.y + context.scroll.y - element.position.y) / element.factor).toString())\n            )\n\n            // set the additional pixels as css transform translate\n            element.setTranslate(additional)\n        }\n    }\n\n    /**\n     * Update the correct current mouse position\n     * @param {FollowPosition} position\n     * @param context\n     */\n    private static updateMousePosition (position: FollowPosition, context: any) {\n        context.mouse.x = position.x\n        context.mouse.y = position.y\n    }\n\n    /**\n     * Update the correct current scroll position\n     * @param {FollowPosition} position\n     * @param context\n     */\n    private static updateScrollPosition (position: FollowPosition, context: any) {\n        context.scroll.x = position.x\n        context.scroll.y = position.y\n    }\n\n    /**\n     * Set FollowOptions if they have been passed in the object initialization\n     * @param {object} options\n     */\n    setDefaults (options: object) {\n        if (options && options['defaults']) {\n            for (const property in this.defaults) {\n                if (this.defaults.hasOwnProperty(property) && options['defaults'][property] !== undefined) {\n                    this.defaults[property] = options['defaults'][property]\n                }\n            }\n        }\n    }\n}\n\nclass FollowElement {\n    /**\n     * The HTML target of the Follow Element\n     * @type HTMLElement\n     */\n    public target: HTMLElement\n\n    /**\n     * The factor which defines how fast the element follows\n     * @type number\n     */\n    public factor: number\n\n    /**\n     * The position of the element\n     * @type FollowPosition\n     */\n    public position: FollowPosition\n\n    /**\n     * The current translate property\n     * @type string\n     */\n    public translate: string\n\n    /**\n     * Constructor\n     * @param {HTMLElement} target\n     * @param {FollowDefaults} defaults\n     */\n    constructor (target: HTMLElement, defaults: FollowDefaults) {\n        this.target = target\n        this.factor = parseInt(target.getAttribute(defaults['attribute'])) || defaults['factor']\n        this.position = this.getPosition()\n    }\n\n    /**\n     * Get position of target to calculate translate values\n     * @return {FollowPosition}\n     */\n    public getPosition () {\n        // define absolute location of element\n        let bodyRectangular: ClientRect = document.body.getBoundingClientRect()\n        let elemRect: ClientRect = this.target.getBoundingClientRect()\n        let x: number = elemRect.left - bodyRectangular.left\n        let y: number = elemRect.top - bodyRectangular.top\n\n        // calculate position center of element\n        let height: number = this.target.offsetHeight\n        let width: number = this.target.offsetWidth\n\n        x += (width / 2)\n        y += (height / 2)\n\n        return new FollowPosition(x, y)\n    }\n\n    /**\n     * Update the position of the element\n     */\n    public updatePosition () {\n        this.position = this.getPosition()\n    }\n\n    /**\n     * Replace the new translate property with the old one\n     * @param {FollowPosition} position\n     */\n    public setTranslate (position: FollowPosition) {\n        // if value is exactly zero, change to 0.01 because the css interpreter in the browser interprets it different\n        if (position.x === 0) position.x = 0.1\n        if (position.y === 0) position.y = 0.1\n\n        let transform: string = this.target.style.transform\n        let translate: string = `translate(${position.x}px, ${position.y}px)`\n\n        if (this.translate) {\n            transform = transform.replace(this.translate, translate)\n        } else {\n            transform += ` ${translate}`.trim()\n        }\n\n        this.translate = translate\n        this.target.style.transform = transform\n    }\n}\n\nclass FollowPosition {\n    /**\n     * X Value of Position\n     * @type number\n     */\n    public x: number\n\n    /**\n     * Y Value of Position\n     * @type number\n     */\n    public y: number\n\n    /**\n     * Z Value of Position\n     * @type number\n     */\n    public z: number\n\n    /**\n     * Constructor\n     * @param {number} x\n     * @param {number} y\n     * @param {number} z (optional)\n     */\n    constructor (x: number, y: number, z: number = 0) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n}\n\n/**\n * Object with all the default settings in it.\n * The values may be overwritten\n */\nclass FollowDefaults {\n    /**\n     * The factor how much the element moves with your cursor\n     * @type {number}\n     */\n    public factor: number = 10\n\n    /**\n     * The attribute for the elements you want to follow\n     * @type {string}\n     */\n    public attribute: string = 'data-follow'\n\n    /**\n     * If the object should automatically initiate the script on initialization of the class\n     * @type {boolean}\n     */\n    public initiate: boolean = true\n}\n\n/**\n * Check if auto init is enabled and if true, auto initialize the script\n * To enable it, add the attribute 'data-follow-auto' to the place where you add the script in your code\n */\n(() => {\n    if (document.currentScript) {\n        let value: string = document.currentScript.getAttribute('data-follow-auto')\n        if (value === '' || value === 'true') {\n            window['follow'] = new Follow()\n        }\n    }\n})()"]}